#file: noinspection YAMLSchemaValidation
openapi: 3.0.0
info:
  title: OpenAI API
  description: The OpenAI REST API. Please see
    https://platform.openai.com/docs/api-reference for more details.
  version: 2.3.0
  termsOfService: https://openai.com/policies/terms-of-use
  contact:
    name: OpenAI Support
    url: https://help.openai.com/
  license:
    name: MIT
    url: https://github.com/openai/openai-openapi/blob/master/LICENSE
components:
  schemas:
    AudioFormat:
      type: string
      description: The format of the audio.
      enum:
        - pcm16
        - g711_ulaw
        - g711_alaw
    Voice:
      type: string
      description: The voice used by the model.
      enum:
        - alloy
        - echo
        - shimmer
    ItemRole:
      type: string
      description: The role associated with the item.
      enum:
        - user
        - assistant
        - system
    ItemType:
      type: string
      description: The type of the item.
      enum:
        - message
        - function_call
        - function_call_output
    ItemStatus:
      type: string
      description: The status of the item.
      enum:
        - completed
        - in_progress
        - incomplete
    ContentType:
      type: string
      description: The type of the content.
      enum:
        - input_text
        - input_audio
        - text
        - audio
    ObjectType:
      type: string
      description: The object type.
      enum:
        - realtime.item
        - realtime.response
        - realtime.session
        - realtime.conversation
    ToolType:
      type: string
      description: The type of the tool. Currently, only `function` is supported.
      enum:
        - function
    ToolDefinition:
      type: object
      description: The definition of a tool the model may use.
      properties:
        type:
          $ref: "#/components/schemas/ToolType"
          default: function
          description: The type of the tool (currently only `function` is supported).
        name:
          type: string
          description: The name of the function.
        description:
          type: string
          description: The description of the function.
        parameters:
          type: object
          description: Parameters of the function in JSON Schema.
      required:
        - name
    ToolChoiceForced:
      type: object
      description: Specifies a tool the model should use. Use to force the model to call a specific function.
      properties:
        type:
          $ref: "#/components/schemas/ToolType"
          default: function
        name:
          type: string
          description: The name of the function to call.
      required:
        - name
    ContentPart:
      description: A part of the content.
      oneOf:
        - $ref: "#/components/schemas/ContentPartInputText"
        - $ref: "#/components/schemas/ContentPartInputAudio"
        - $ref: "#/components/schemas/ContentPartText"
        - $ref: "#/components/schemas/ContentPartAudio"
      discriminator:
        propertyName: type
    ContentPartInputText:
      type: object
      description: A part of the input text content.
      properties:
        type:
          $ref: "#/components/schemas/ContentType"
          description: The content type.
          default: input_text
        text:
          type: string
          description: The text content.
      required:
        - text
    ContentPartInputAudio:
      type: object
      description: A part of the input audio content.
      properties:
        type:
          $ref: "#/components/schemas/ContentType"
          description: The content type.
          default: input_audio
        audio:
          type: string
          description: Base64-encoded audio bytes.
        transcript:
          type: string
          description: The transcript of the audio.
    ContentPartText:
      type: object
      description: A part of the text content.
      properties:
        type:
          $ref: "#/components/schemas/ContentType"
          description: The content type.
          default: text
        text:
          type: string
          description: The text content.
      required:
        - text
    ContentPartAudio:
      type: object
      description: A part of the audio content.
      properties:
        type:
          $ref: "#/components/schemas/ContentType"
          description: The content type.
          default: audio
        audio:
          type: string
          description: Base64-encoded audio bytes.
        transcript:
          type: string
          description: The transcript of the audio.
    Item:
      type: object
      description: The item to add to the conversation.
      oneOf:
        - $ref: "#/components/schemas/ItemMessage"
        - $ref: "#/components/schemas/ItemFunctionCall"
        - $ref: "#/components/schemas/ItemFunctionCallOutput"
      discriminator:
        propertyName: type
    ItemMessage:
      type: object
      description: A message item.
      properties:
        id:
          type: string
          description: The unique ID of the item.
        object:
          $ref: "#/components/schemas/ObjectType"
          description: The object type, must be "realtime.item".
        type:
          $ref: "#/components/schemas/ItemType"
          description: The type of the item.
          default: message
        status:
          $ref: "#/components/schemas/ItemStatus"
          description: The status of the item.
        role:
          $ref: "#/components/schemas/ItemRole"
          description: The role of the message sender.
        content:
          type: array
          description: The content of the message.
          items:
            $ref: "#/components/schemas/ContentPart"
      required:
        - id
        - role
        - content
    ItemFunctionCall:
      type: object
      description: A function call item.
      properties:
        id:
          type: string
          description: The unique ID of the item.
        object:
          $ref: "#/components/schemas/ObjectType"
          description: The object type.
          default: realtime.item
        type:
          $ref: "#/components/schemas/ItemType"
          description: The type of the item.
          default: function_call
        status:
          $ref: "#/components/schemas/ItemStatus"
          description: The status of the item.
        call_id:
          type: string
          description: The ID of the function call.
        name:
          type: string
          description: The name of the function being called.
        arguments:
          type: string
          description: The arguments of the function call.
      required:
        - id
        - call_id
        - name
        - arguments
    ItemFunctionCallOutput:
      type: object
      description: A function call output item.
      properties:
        id:
          type: string
          description: The unique ID of the item.
        object:
          $ref: "#/components/schemas/ObjectType"
          description: The object type. Always "realtime.item".
        type:
          $ref: "#/components/schemas/ItemType"
          description: The type of the item.
          default: function_call_output
        status:
          $ref: "#/components/schemas/ItemStatus"
          description: The status of the item.
        call_id:
          type: string
          description: The ID of the function call.
        output:
          type: string
          description: The output of the function call.
      required:
        - id
        - call_id
        - output
    InputAudioTranscriptionConfig:
      type: object
      description: Configuration for input audio transcription.
      properties:
        enabled:
          type: boolean
          description: Whether input audio transcription is enabled.
        model:
          type: string
          description: The model used for transcription.
    TurnDetection:
      type: object
      description: Configuration for turn detection.
      properties:
        type:
          $ref: "#/components/schemas/TurnDetectionType"
          description: The type of turn detection ("server_vad" or "none").
        threshold:
          type: number
          description: Activation threshold for VAD.
        prefix_padding_ms:
          type: integer
          description: Audio included before speech starts (in milliseconds).
        silence_duration_ms:
          type: integer
          description: Duration of silence to detect speech stop (in milliseconds).
      required:
        - type
    TurnDetectionType:
      type: string
      description: The type of turn detection.
      enum:
        - server_vad
    RateLimit:
      type: object
      description: Rate limit information.
      properties:
        name:
          $ref: "#/components/schemas/RateLimitName"
          description: The name of the rate limit.
        limit:
          type: integer
          description: The maximum allowed value for the rate limit.
        remaining:
          type: integer
          description: The remaining value before the limit is reached.
        reset_seconds:
          type: number
          description: Seconds until the rate limit resets.
      required:
        - name
        - limit
        - remaining
        - reset_seconds
    RateLimitName:
      type: string
      description: The name of the rate limit.
      enum:
        - requests
        - tokens
        - input_tokens
        - output_tokens
    Response:
      type: object
      description: The response resource.
      properties:
        id:
          type: string
          description: The unique ID of the response.
        object:
          $ref: "#/components/schemas/ObjectType"
          description: The object type, must be "realtime.response".
          default: realtime.response
        status:
          $ref: "#/components/schemas/ResponseStatus"
          description: The status of the response.
        status_details:
          $ref: "#/components/schemas/ResponseStatusDetails"
          description: Additional details about the status.
          nullable: true
        output:
          type: array
          description: The list of output items generated by the response.
          items:
            $ref: "#/components/schemas/Item"
            description: An item in the response output.
        usage:
          $ref: "#/components/schemas/Usage"
      required:
        - id
        - status
        - output
    ResponseStatus:
      type: string
      description: The status of the response.
      enum:
        - in_progress
        - completed
        - cancelled
        - failed
        - incomplete
    ResponseStatusDetails:
      description: Additional details about the status.
      oneOf:
        - $ref: "#/components/schemas/ResponseStatusDetailsIncomplete"
        - $ref: "#/components/schemas/ResponseStatusDetailsFailed"
      discriminator:
        propertyName: type
    ResponseStatusType:
      type: string
      description: The type of the status.
      enum:
        - incomplete
        - failed
    ResponseStatusDetailsIncomplete:
      type: object
      description: Details about the incomplete response.
      properties:
        type:
          $ref: "#/components/schemas/ResponseStatusType"
          default: incomplete
        reason:
          $ref: "#/components/schemas/ResponseStatusIncompleteReason"
    ResponseStatusIncompleteReason:
      type: string
      description: The reason the response is incomplete.
      enum:
        - interruption
        - max_output_tokens
        - content_filter
    ResponseStatusDetailsFailed:
      type: object
      description: Details about the failed response.
      properties:
        type:
          $ref: "#/components/schemas/ResponseStatusType"
          default: failed
        error:
          $ref: "#/components/schemas/APIError"
          nullable: true
    ResponseConfig:
      type: object
      description: Configuration for the response.
      properties:
        modalities:
          type: array
          description: The modalities for the response.
          items:
            $ref: "#/components/schemas/Modality"
        instructions:
          type: string
          description: Instructions for the model.
        voice:
          $ref: "#/components/schemas/Voice"
          description: The voice the model uses to respond - one of `alloy`, `echo`, or
            `shimmer`.
        output_audio_format:
          $ref: "#/components/schemas/AudioFormat"
          description: The format of output audio.
        tools:
          type: array
          description: Tools (functions) available to the model.
          items:
            $ref: "#/components/schemas/ToolDefinition"
        tool_choice:
          description: How the model chooses tools.
          oneOf:
            - type: string
              title: ResponseConfigToolChoiceMode
              description: >
                `none` means the model will not call any tool and instead generates a message.
                `auto` means the model can pick between generating a message or calling one or more tools.
                `required` means the model must call one or more tools.
              enum: [ none, auto, required ]
            - $ref: "#/components/schemas/ToolChoiceForced"
        temperature:
          type: number
          description: Sampling temperature.
        max_response_output_tokens:
          description: Maximum number of output tokens for a single assistant response,
            inclusive of tool calls. Defaults to "inf".
          oneOf:
            - type: integer
              description: Provide an integer between 1 and 4096 to limit output tokens.
            - type: string
              description: Use inf for the maximum available tokens for a given model.
              default: inf
    Usage:
      type: object
      description: Usage statistics for the response
      properties:
        total_tokens:
          type: integer
          description: The total number of tokens used.
        input_tokens:
          type: integer
          description: The number of input tokens used.
        output_tokens:
          type: integer
          description: The number of output tokens used.
        input_token_details:
          type: object
          description: Details about the input tokens used.
          properties:
            cached_tokens:
              type: integer
              description: The number of cached tokens used.
            text_tokens:
              type: integer
              description: The number of text tokens used.
            audio_tokens:
              type: integer
              description: The number of audio tokens used.
    Session:
      type: object
      description: The session resource.
      properties:
        id:
          type: string
          description: The unique ID of the session.
        object:
          $ref: "#/components/schemas/ObjectType"
          description: The object type, must be "realtime.session".
          default: realtime.session
        model:
          type: string
          description: The default model used for this session.
        expires_at:
          type: integer
          description: The time at which the session expires.
        modalities:
          type: array
          description: The set of modalities the model can respond with.
          items:
            $ref: "#/components/schemas/Modality"
        instructions:
          type: string
          description: The default system instructions.
        voice:
          $ref: "#/components/schemas/Voice"
          description: The voice the model uses to respond - one of `alloy`, `echo`, or
            `shimmer`.
        input_audio_format:
          $ref: "#/components/schemas/AudioFormat"
          description: The format of input audio.
        output_audio_format:
          $ref: "#/components/schemas/AudioFormat"
          description: The format of output audio.
        input_audio_transcription:
          $ref: "#/components/schemas/InputAudioTranscriptionConfig"
        turn_detection:
          $ref: "#/components/schemas/TurnDetection"
        tools:
          type: array
          description: Tools (functions) available to the model.
          items:
            $ref: "#/components/schemas/ToolDefinition"
        tool_choice:
          description: How the model chooses tools.
          oneOf:
            - type: string
              title: SessionToolChoiceMode
              description: >
                `none` means the model will not call any tool and instead generates a message.
                `auto` means the model can pick between generating a message or calling one or more tools.
                `required` means the model must call one or more tools.
              enum: [ none, auto, required ]
            - $ref: "#/components/schemas/ToolChoiceForced"
        temperature:
          type: number
          description: Sampling temperature.
        max_response_output_tokens:
          description: Maximum number of output tokens for a single assistant response,
            inclusive of tool calls. Defaults to "inf".
          oneOf:
            - type: integer
              description: Provide an integer between 1 and 4096 to limit output tokens.
            - type: string
              description: Use inf for the maximum available tokens for a given model.
              default: inf
    SessionConfig:
      type: object
      description: Session configuration to update.
      properties:
        modalities:
          type: array
          items:
            $ref: "#/components/schemas/Modality"
          description: |
            The set of modalities the model can respond with. To disable audio, set this to ["text"].
        instructions:
          type: string
          description: The default system instructions prepended to model calls.
        voice:
          $ref: "#/components/schemas/Voice"
          description: |
            The voice the model uses to respond - one of `alloy`, `echo`,
            or  `shimmer`. Cannot be changed once the model has responded
            with audio  at least once.
        input_audio_format:
          $ref: "#/components/schemas/AudioFormat"
          description: The format of input audio. Options are "pcm16", "g711_ulaw", or "g711_alaw".
        output_audio_format:
          $ref: "#/components/schemas/AudioFormat"
          description: The format of output audio. Options are "pcm16", "g711_ulaw", or "g711_alaw".
        input_audio_transcription:
          $ref: "#/components/schemas/InputAudioTranscriptionConfig"
          description: Configuration for input audio transcription. Can be set to null to turn off.
          nullable: true
        turn_detection:
          $ref: "#/components/schemas/TurnDetection"
          nullable: true
        tools:
          type: array
          description: Tools (functions) available to the model.
          items:
            $ref: "#/components/schemas/ToolDefinition"
        tool_choice:
          description: How the model chooses tools.
          oneOf:
            - type: string
              title: SessionConfigToolChoiceMode
              description: >
                `none` means the model will not call any tool and instead generates a message.
                `auto` means the model can pick between generating a message or calling one or more tools.
                `required` means the model must call one or more tools.
              enum: [ none, auto, required ]
            - $ref: "#/components/schemas/ToolChoiceForced"
        temperature:
          type: number
          description: Sampling temperature for the model.
        max_response_output_tokens:
          description: Maximum number of output tokens for a single assistant response,
            inclusive of tool calls. Defaults to "inf".
          oneOf:
            - type: integer
              description: Provide an integer between 1 and 4096 to limit output tokens.
            - type: string
              description: Use inf for the maximum available tokens for a given model.
              default: inf
    Conversation:
      type: object
      description: The conversation resource.
      properties:
        id:
          type: string
          description: The unique ID of the conversation.
        object:
          $ref: "#/components/schemas/ObjectType"
          description: The object type, must be "realtime.conversation".
          default: realtime.conversation
      required:
        - id
    Modality:
      type: string
      description: The modality of the model response.
      enum:
        - text
        - audio
    Delta:
      type: object
      description: Delta object.
      properties:
        transcript:
          type: string
          description: The transcript of the audio.
          nullable: true
        audio:
          type: string
          format: byte
          description: The audio bytes.
          nullable: true
        text:
          type: string
          nullable: true
          description: The text.
        arguments:
          type: string
          nullable: true
          description: The arguments.
    FormattedTool:
      type: object
      description: A formatted tool.
      properties:
        type:
          $ref: "#/components/schemas/ToolType"
          default: function
        name:
          type: string
          description: The name of the function.
        call_id:
          type: string
          description: The call id.
        arguments:
          type: string
          description: The arguments.
      required:
        - name
        - call_id
        - arguments
    FormattedProperty:
      type: object
      description: A formatted property.
      properties:
        audio:
          type: string
          format: byte
          description: The audio bytes.
        text:
          type: string
          description: The text.
        transcript:
          type: string
          description: The transcript.
        tool:
          $ref: '#/components/schemas/FormattedTool'
          nullable: true
        output:
          type: string
          nullable: true
          description: The output.
      required:
        - audio
        - text
        - transcript
    FormattedItem:
      type: object
      description: A formatted item.
      properties:
        item:
          $ref: '#/components/schemas/Item'
        formatted:
          $ref: '#/components/schemas/FormattedProperty'
          nullable: true
      required:
        - item
        - formatted
    ItemSpeech:
      type: object
      description: The speech item.
      properties:
        audioStartMs:
          type: integer
          format: int32
          description: The start time of the audio in milliseconds.
        audioEndMs:
          type: integer
          format: int32
          description: The end time of the audio in milliseconds.
          nullable: true
        audio:
          type: string
          format: byte
          description: The audio bytes.
          nullable: true
      required:
        - audioStartMs
    ItemTranscript:
      type: object
      description: The transcript item.
      properties:
        transcript:
          type: string
          description: The transcript.
      required:
        - transcript
    EventHandlerResult:
      type: object
      description:
      properties:
        item:
          $ref: '#/components/schemas/FormattedItem'
          nullable: true
        delta:
          $ref: '#/components/schemas/Delta'
          nullable: true
        response:
          $ref: '#/components/schemas/Response'
          nullable: true
    TranscriptionError:
      type: object
      description: Details of the transcription error.
      properties:
        type:
          type: string
          description: The type of the error.
        code:
          type: string
          description: Error code, if any.
        message:
          type: string
          description: A human-readable error message.
        param:
          type: string
          description: Parameter related to the error, if any.
    APIError:
      type: object
      description: Details of the API error.
      properties:
        type:
          type: string
          description: The type of error (e.g., "invalid_request_error", "server_error").
        code:
          type: string
          description: Error code, if any.
        message:
          type: string
          description: A human-readable error message.
        param:
          type: string
          description: Parameter related to the error, if any.
        event_id:
          type: string
          description: The event_id of the client event that caused the error, if
            applicable.
    RealtimeEvent:
      type: object
      description: A Realtime API event.
      oneOf:
        - $ref: "#/components/schemas/RealtimeEventConversationItemCreate"
        - $ref: "#/components/schemas/RealtimeEventConversationItemDelete"
        - $ref: "#/components/schemas/RealtimeEventConversationItemTruncate"
        - $ref: "#/components/schemas/RealtimeEventInputAudioBufferAppend"
        - $ref: "#/components/schemas/RealtimeEventInputAudioBufferClear"
        - $ref: "#/components/schemas/RealtimeEventInputAudioBufferCommit"
        - $ref: "#/components/schemas/RealtimeEventResponseCancel"
        - $ref: "#/components/schemas/RealtimeEventResponseCreate"
        - $ref: "#/components/schemas/RealtimeEventSessionUpdate"
        - $ref: "#/components/schemas/RealtimeEventConversationCreated"
        - $ref: "#/components/schemas/RealtimeEventConversationItemCreated"
        - $ref: "#/components/schemas/RealtimeEventConversationItemDeleted"
        - $ref: "#/components/schemas/RealtimeEventConversationItemInputAudioTranscriptionCompleted"
        - $ref: "#/components/schemas/RealtimeEventConversationItemInputAudioTranscriptionFailed"
        - $ref: "#/components/schemas/RealtimeEventConversationItemTruncated"
        - $ref: "#/components/schemas/RealtimeEventError"
        - $ref: "#/components/schemas/RealtimeEventInputAudioBufferCleared"
        - $ref: "#/components/schemas/RealtimeEventInputAudioBufferCommitted"
        - $ref: "#/components/schemas/RealtimeEventInputAudioBufferSpeechStarted"
        - $ref: "#/components/schemas/RealtimeEventInputAudioBufferSpeechStopped"
        - $ref: "#/components/schemas/RealtimeEventRateLimitsUpdated"
        - $ref: "#/components/schemas/RealtimeEventResponseAudioDelta"
        - $ref: "#/components/schemas/RealtimeEventResponseAudioDone"
        - $ref: "#/components/schemas/RealtimeEventResponseAudioTranscriptDelta"
        - $ref: "#/components/schemas/RealtimeEventResponseAudioTranscriptDone"
        - $ref: "#/components/schemas/RealtimeEventResponseContentPartAdded"
        - $ref: "#/components/schemas/RealtimeEventResponseContentPartDone"
        - $ref: "#/components/schemas/RealtimeEventResponseCreated"
        - $ref: "#/components/schemas/RealtimeEventResponseDone"
        - $ref: "#/components/schemas/RealtimeEventResponseFunctionCallArgumentsDelta"
        - $ref: "#/components/schemas/RealtimeEventResponseFunctionCallArgumentsDone"
        - $ref: "#/components/schemas/RealtimeEventResponseOutputItemAdded"
        - $ref: "#/components/schemas/RealtimeEventResponseOutputItemDone"
        - $ref: "#/components/schemas/RealtimeEventResponseTextDelta"
        - $ref: "#/components/schemas/RealtimeEventResponseTextDone"
        - $ref: "#/components/schemas/RealtimeEventSessionCreated"
        - $ref: "#/components/schemas/RealtimeEventSessionUpdated"
        - $ref: "#/components/schemas/RealtimeEventClose"
        - $ref: "#/components/schemas/RealtimeEventConversationInterrupted"
        - $ref: "#/components/schemas/RealtimeEventConversationUpdated"
        - $ref: "#/components/schemas/RealtimeEventConversationItemAppended"
        - $ref: "#/components/schemas/RealtimeEventConversationItemCompleted"
        - $ref: "#/components/schemas/RealtimeEventGeneric"
      discriminator:
        propertyName: type
    RealtimeEventType:
      type: string
      description: The type of the event.
      enum:
        - conversation.item.create
        - conversation.item.delete
        - conversation.item.truncate
        - input_audio_buffer.append
        - input_audio_buffer.clear
        - input_audio_buffer.commit
        - response.cancel
        - response.create
        - session.update
        - conversation.created
        - conversation.item.created
        - conversation.item.deleted
        - conversation.item.input_audio_transcription.completed
        - conversation.item.input_audio_transcription.failed
        - conversation.item.truncated
        - error
        - input_audio_buffer.cleared
        - input_audio_buffer.committed
        - input_audio_buffer.speech_started
        - input_audio_buffer.speech_stopped
        - rate_limits.updated
        - response.audio.delta
        - response.audio.done
        - response.audio_transcript.delta
        - response.audio_transcript.done
        - response.content_part.added
        - response.content_part.done
        - response.created
        - response.done
        - response.function_call_arguments.delta
        - response.function_call_arguments.done
        - response.output_item.added
        - response.output_item.done
        - response.text.delta
        - response.text.done
        - session.created
        - session.updated
        # Utility events
        - close
        - conversation.interrupted
        - conversation.updated
        - conversation.item.appended
        - conversation.item.completed
        - realtime.event
        - all
        - server.all
        - client.all
    RealtimeEventConversationItemCreate:
      type: object
      description: Send this event when adding an item to the conversation.
      properties:
        event_id:
          type: string
          description: Optional client-generated ID used to identify this event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.create
        previous_item_id:
          type: string
          description: The ID of the preceding item after which the new item will be
            inserted.
        item:
          $ref: "#/components/schemas/Item"
      required:
        - event_id
        - item
    RealtimeEventConversationItemDelete:
      type: object
      description: Send this event when you want to remove any item from the
        conversation history.
      properties:
        event_id:
          type: string
          description: Optional client-generated ID used to identify this event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.delete
        item_id:
          type: string
          description: The ID of the item to delete.
      required:
        - event_id
        - item_id
    RealtimeEventConversationItemTruncate:
      type: object
      description: Send this event when you want to truncate a previous assistant
        message’s audio.
      properties:
        event_id:
          type: string
          description: Optional client-generated ID used to identify this event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.truncate
        item_id:
          type: string
          description: The ID of the assistant message item to truncate.
        content_index:
          type: integer
          description: The index of the content part to truncate.
        audio_end_ms:
          type: integer
          description: Inclusive duration up to which audio is truncated, in milliseconds.
      required:
        - event_id
        - item_id
        - content_index
        - audio_end_ms
    RealtimeEventInputAudioBufferAppend:
      type: object
      description: Send this event to append audio bytes to the input audio buffer.
      properties:
        event_id:
          type: string
          description: Optional client-generated ID used to identify this event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: input_audio_buffer.append
        audio:
          type: string
          description: Base64-encoded audio bytes.
      required:
        - event_id
        - audio
    RealtimeEventInputAudioBufferClear:
      type: object
      description: Send this event to clear the audio bytes in the buffer.
      properties:
        event_id:
          type: string
          description: Optional client-generated ID used to identify this event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: input_audio_buffer.clear
      required:
        - event_id
    RealtimeEventInputAudioBufferCommit:
      type: object
      description: Send this event to commit audio bytes to a user message.
      properties:
        event_id:
          type: string
          description: Optional client-generated ID used to identify this event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: input_audio_buffer.commit
      required:
        - event_id
    RealtimeEventResponseCancel:
      type: object
      description: Send this event to cancel an in-progress response.
      properties:
        event_id:
          type: string
          description: Optional client-generated ID used to identify this event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.cancel
      required:
        - event_id
    RealtimeEventResponseCreate:
      type: object
      description: Send this event to trigger a response generation.
      properties:
        event_id:
          type: string
          description: Optional client-generated ID used to identify this event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.create
        response:
          $ref: "#/components/schemas/ResponseConfig"
      required:
        - event_id
    RealtimeEventSessionUpdate:
      type: object
      description: Send this event to update the session’s default configuration.
      properties:
        event_id:
          type: string
          description: Optional client-generated ID used to identify this event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: session.update
        session:
          $ref: "#/components/schemas/SessionConfig"
      required:
        - session
    RealtimeEventConversationCreated:
      type: object
      description: Returned when a conversation is created. Emitted right after
        session creation.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.created
        conversation:
          $ref: "#/components/schemas/Conversation"
      required:
        - event_id
        - conversation
    RealtimeEventConversationItemCreated:
      type: object
      description: Returned when a conversation item is created.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.created
        previous_item_id:
          type: string
          nullable: true
          description: The ID of the preceding item.
        item:
          $ref: "#/components/schemas/Item"
      required:
        - event_id
        - previous_item_id
        - item
    RealtimeEventConversationItemDeleted:
      type: object
      description: Returned when an item in the conversation is deleted.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.deleted
        item_id:
          type: string
          description: The ID of the item that was deleted.
      required:
        - event_id
        - item_id
    RealtimeEventConversationItemInputAudioTranscriptionCompleted:
      type: object
      description: Returned when input audio transcription is enabled and a
        transcription succeeds.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.input_audio_transcription.completed
        item_id:
          type: string
          description: The ID of the user message item.
        content_index:
          type: integer
          description: The index of the content part containing the audio.
        transcript:
          type: string
          description: The transcribed text.
      required:
        - event_id
        - item_id
        - content_index
        - transcript
    RealtimeEventConversationItemInputAudioTranscriptionFailed:
      type: object
      description: Returned when input audio transcription is configured, and a
        transcription request for a user message failed.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.input_audio_transcription.failed
        item_id:
          type: string
          description: The ID of the user message item.
        content_index:
          type: integer
          description: The index of the content part containing the audio.
        error:
          $ref: "#/components/schemas/TranscriptionError"
      required:
        - event_id
        - item_id
        - content_index
        - error
    RealtimeEventConversationItemTruncated:
      type: object
      description: Returned when an earlier assistant audio message item is truncated
        by the client.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.truncated
        item_id:
          type: string
          description: The ID of the assistant message item that was truncated.
        content_index:
          type: integer
          description: The index of the content part that was truncated.
        audio_end_ms:
          type: integer
          description: The duration up to which the audio was truncated, in milliseconds.
      required:
        - event_id
        - item_id
        - content_index
        - audio_end_ms
    RealtimeEventError:
      type: object
      description: Returned when an error occurs.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: error
        error:
          $ref: "#/components/schemas/APIError"
      required:
        - event_id
        - error
    RealtimeEventInputAudioBufferCleared:
      type: object
      description: Returned when the input audio buffer is cleared by the client.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: input_audio_buffer.cleared
      required:
        - event_id
    RealtimeEventInputAudioBufferCommitted:
      type: object
      description: Returned when an input audio buffer is committed, either by the
        client or automatically in server VAD mode.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: input_audio_buffer.committed
        previous_item_id:
          type: string
          description: The ID of the preceding item after which the new item will be
            inserted.
        item_id:
          type: string
          description: The ID of the user message item that will be created.
      required:
        - event_id
        - previous_item_id
        - item_id
    RealtimeEventInputAudioBufferSpeechStarted:
      type: object
      description: Returned in server turn detection mode when speech is detected.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: input_audio_buffer.speech_started
        audio_start_ms:
          type: integer
          description: Milliseconds since the session started when speech was detected.
        item_id:
          type: string
          description: The ID of the user message item that will be created when speech
            stops.
      required:
        - event_id
        - audio_start_ms
        - item_id
    RealtimeEventInputAudioBufferSpeechStopped:
      type: object
      description: Returned in server turn detection mode when speech stops.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: input_audio_buffer.speech_stopped
        audio_end_ms:
          type: integer
          description: Milliseconds since the session started when speech stopped.
        item_id:
          type: string
          description: The ID of the user message item that will be created.
      required:
        - event_id
        - audio_end_ms
        - item_id
    RealtimeEventRateLimitsUpdated:
      type: object
      description: Emitted after every "response.done" event to indicate the updated
        rate limits.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: rate_limits.updated
        rate_limits:
          type: array
          description: List of rate limit information.
          items:
            $ref: "#/components/schemas/RateLimit"
      required:
        - event_id
        - rate_limits
    RealtimeEventResponseAudioDelta:
      type: object
      description: Returned when the model-generated audio is updated.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.audio.delta
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the item.
        output_index:
          type: integer
          description: The index of the output item in the response.
        content_index:
          type: integer
          description: The index of the content part in the item's content array.
        delta:
          type: string
          description: Base64-encoded audio data delta.
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - content_index
        - delta
    RealtimeEventResponseAudioDone:
      type: object
      description: Returned when the model-generated audio is done. Also emitted when
        a Response is interrupted, incomplete, or cancelled.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.audio.done
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the item.
        output_index:
          type: integer
          description: The index of the output item in the response.
        content_index:
          type: integer
          description: The index of the content part in the item's content array.
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - content_index
    RealtimeEventResponseAudioTranscriptDelta:
      type: object
      description: Returned when the model-generated transcription of audio output is
        updated.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.audio_transcript.delta
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the item.
        output_index:
          type: integer
          description: The index of the output item in the response.
        content_index:
          type: integer
          description: The index of the content part in the item's content array.
        delta:
          type: string
          description: The transcript delta.
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - content_index
        - delta
    RealtimeEventResponseAudioTranscriptDone:
      type: object
      description: Returned when the model-generated transcription of audio output is
        done streaming. Also emitted when a Response is interrupted, incomplete,
        or cancelled.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.audio_transcript.done
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the item.
        output_index:
          type: integer
          description: The index of the output item in the response.
        content_index:
          type: integer
          description: The index of the content part in the item's content array.
        transcript:
          type: string
          description: The final transcript of the audio.
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - content_index
        - transcript
    RealtimeEventResponseContentPartAdded:
      type: object
      description: Returned when a new content part is added to an assistant message
        item during response generation.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.content_part.added
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the item to which the content part was added.
        output_index:
          type: integer
          description: The index of the output item in the response.
        content_index:
          type: integer
          description: The index of the content part in the item's content array.
        part:
          $ref: "#/components/schemas/ContentPart"
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - content_index
        - part
    RealtimeEventResponseContentPartDone:
      type: object
      description: Returned when a content part is done streaming in an assistant
        message item. Also emitted when a Response is interrupted, incomplete,
        or cancelled.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.content_part.done
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the item.
        output_index:
          type: integer
          description: The index of the output item in the response.
        content_index:
          type: integer
          description: The index of the content part in the item's content array.
        part:
          $ref: "#/components/schemas/ContentPart"
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - content_index
        - part
    RealtimeEventResponseCreated:
      type: object
      description: Returned when a new Response is created. The first event of
        response creation, where the response is in an initial state of
        "in_progress".
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.created
        response:
          $ref: "#/components/schemas/Response"
      required:
        - event_id
        - response
    RealtimeEventResponseDone:
      type: object
      description: Returned when a Response is done streaming. Always emitted, no
        matter the final state.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.done
        response:
          $ref: "#/components/schemas/Response"
      required:
        - event_id
        - response
    RealtimeEventResponseFunctionCallArgumentsDelta:
      type: object
      description: Returned when the model-generated function call arguments are updated.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.function_call_arguments.delta
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the function call item.
        output_index:
          type: integer
          description: The index of the output item in the response.
        call_id:
          type: string
          description: The ID of the function call.
        delta:
          type: string
          description: The arguments delta as a JSON string.
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - call_id
        - delta
    RealtimeEventResponseFunctionCallArgumentsDone:
      type: object
      description: Returned when the model-generated function call arguments are done
        streaming. Also emitted when a Response is interrupted, incomplete, or
        cancelled.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.function_call_arguments.done
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the function call item.
        output_index:
          type: integer
          description: The index of the output item in the response.
        call_id:
          type: string
          description: The ID of the function call.
        arguments:
          type: string
          description: The final arguments as a JSON string.
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - call_id
        - arguments
    RealtimeEventResponseOutputItemAdded:
      type: object
      description: Returned when a new Item is created during response generation.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.output_item.added
        response_id:
          type: string
          description: The ID of the response to which the item belongs.
        output_index:
          type: integer
          description: The index of the output item in the response.
        item:
          $ref: "#/components/schemas/Item"
      required:
        - event_id
        - response_id
        - output_index
        - item
    RealtimeEventResponseOutputItemDone:
      type: object
      description: Returned when an Item is done streaming. Also emitted when a
        Response is interrupted, incomplete, or cancelled.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.output_item.done
        response_id:
          type: string
          description: The ID of the response to which the item belongs.
        output_index:
          type: integer
          description: The index of the output item in the response.
        item:
          $ref: "#/components/schemas/Item"
      required:
        - event_id
        - response_id
        - output_index
        - item
    RealtimeEventResponseTextDelta:
      type: object
      description: Returned when the text value of a "text" content part is updated.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.text.delta
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the item.
        output_index:
          type: integer
          description: The index of the output item in the response.
        content_index:
          type: integer
          description: The index of the content part in the item's content array.
        delta:
          type: string
          description: The text delta.
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - content_index
        - delta
    RealtimeEventResponseTextDone:
      type: object
      description: Returned when the text value of a "text" content part is done
        streaming. Also emitted when a Response is interrupted, incomplete, or
        cancelled.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: response.text.done
        response_id:
          type: string
          description: The ID of the response.
        item_id:
          type: string
          description: The ID of the item.
        output_index:
          type: integer
          description: The index of the output item in the response.
        content_index:
          type: integer
          description: The index of the content part in the item's content array.
        text:
          type: string
          description: The final text content.
      required:
        - event_id
        - response_id
        - item_id
        - output_index
        - content_index
        - text
    RealtimeEventSessionCreated:
      type: object
      description: Returned when a session is created. Emitted automatically when a
        new connection is established.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: session.created
        session:
          $ref: "#/components/schemas/Session"
      required:
        - event_id
        - session
    RealtimeEventSessionUpdated:
      type: object
      description: Returned when a session is updated.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: session.updated
        session:
          $ref: "#/components/schemas/Session"
      required:
        - event_id
        - session
    RealtimeEventClose:
      type: object
      description: The websocket connection was closed.
      properties:
        event_id:
          type: string
          description: The unique ID of the server event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: close
        error:
          type: boolean
          description: Whether the close was due to an error.
      required:
        - event_id
        - error
    RealtimeEventConversationInterrupted:
      type: object
      description: The conversation was interrupted.
      properties:
        event_id:
          type: string
          description: The unique ID of the event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.interrupted
      required:
        - event_id
    RealtimeEventConversationUpdated:
      type: object
      description: The conversation was updated.
      properties:
        event_id:
          type: string
          description: The unique ID of the event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.updated
        result:
          $ref: '#/components/schemas/EventHandlerResult'
      required:
        - event_id
        - result
    RealtimeEventConversationItemAppended:
      type: object
      description: An item was appended to the conversation.
      properties:
        event_id:
          type: string
          description: The unique ID of the event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.appended
        item:
          $ref: '#/components/schemas/FormattedItem'
      required:
        - event_id
        - item
    RealtimeEventConversationItemCompleted:
      type: object
      description: An item was completed.
      properties:
        event_id:
          type: string
          description: The unique ID of the event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: conversation.item.completed
        item:
          $ref: '#/components/schemas/FormattedItem'
      required:
        - event_id
        - item
    RealtimeEventGeneric:
      type: object
      description: A generic realtime event.
      properties:
        event_id:
          type: string
          description: The unique ID of the event.
        type:
          $ref: "#/components/schemas/RealtimeEventType"
          description: The type of the event.
          default: realtime.event
        event:
          $ref: '#/components/schemas/RealtimeEvent'
      required:
        - event_id
        - event
